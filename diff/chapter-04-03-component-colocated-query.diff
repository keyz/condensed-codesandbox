diff --git a/chapter-04-02-first-query/src/root.tsx b/chapter-04-03-component-colocated-query/src/root.tsx
--- a/chapter-04-02-first-query/src/root.tsx
+++ b/chapter-04-03-component-colocated-query/src/root.tsx
@@ -1,10 +1,13 @@
 import { Octokit } from "@octokit/rest";
 import * as React from "react";
 import useSWR from "swr";
+import { assertNonNull } from "./helpers/refinement";
 import { formatRelativeTime } from "./helpers/time";
 import type { TRepoSearchResultItem } from "./types";
 
-const octokit = new Octokit();
+const octokit = new Octokit({
+  auth: process.env.NEXT_PUBLIC_UNSAFE_LOCAL_ONLY_GITHUB_PERSONAL_ACCESS_TOKEN,
+});
 
 function useGitHubRepoSearchQuery() {
   const cacheKey = ["octokit.search.repos"];
@@ -49,9 +52,41 @@ export function GitHubRoot() {
   );
 }
 
+function useGitHubRepoLatestReleaseQuery(input: {
+  owner: string;
+  repo: string;
+}) {
+  const { owner, repo } = input;
+  const cacheKey = ["octokit.repos.getLatestRelease", { owner, repo }];
+
+  return useSWR(cacheKey, async () => {
+    // https://docs.github.com/en/rest/releases/releases?apiVersion=2022-11-28#get-the-latest-release
+    return octokit.repos.getLatestRelease({
+      owner,
+      repo,
+    });
+  });
+}
+
 function RepoItem(props: { data: TRepoSearchResultItem }) {
   const { data } = props;
 
+  assertNonNull(data.owner, "data.owner");
+
+  const query = useGitHubRepoLatestReleaseQuery({
+    owner: data.owner.login,
+    repo: data.name,
+  });
+
+  const releaseInfo =
+    query.data == null ? null : (
+      <span>
+        {" | "}
+        {query.data.data.tag_name} (released{" "}
+        {formatRelativeTime(query.data.data.created_at)})
+      </span>
+    );
+
   const formattedCreatedAt = formatRelativeTime(data.created_at);
 
   return (
@@ -70,6 +105,7 @@ function RepoItem(props: { data: TRepoSearchResultItem }) {
       <p className="text-sm text-gray-600">
         {data.stargazers_count.toLocaleString("en-US")} stars | created{" "}
         {formattedCreatedAt}
+        {releaseInfo}
       </p>
     </div>
   );
