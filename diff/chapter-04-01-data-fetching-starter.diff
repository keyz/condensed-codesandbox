diff --git a/chapter-03-12-quiz-answers/src/root.tsx b/chapter-04-01-data-fetching-starter/src/root.tsx
--- a/chapter-03-12-quiz-answers/src/root.tsx
+++ b/chapter-04-01-data-fetching-starter/src/root.tsx
@@ -1,5 +1,5 @@
 import * as React from "react";
-import cx from "classnames";
+import { PaginationControl } from "./components/pagination";
 import { repoList, type TRepoSearchResultItem } from "./data";
 import { formatRelativeTime } from "./helpers/time";
 
@@ -7,18 +7,8 @@ const PAGE_SIZE = 10;
 
 export function GitHubRoot() {
   const [currentPageNumber, setCurrentPageNumber] = React.useState<number>(0);
-  const [likeCountMap, setLikeCountMap] = React.useState<Map<number, number>>(
-    new Map(),
-  );
-  const [hiddenItemSet, setHiddenItemSet] = React.useState<Set<number>>(
-    new Set(),
-  );
-
-  const filteredRepoList = repoList.filter(
-    (item) => !hiddenItemSet.has(item.id),
-  );
 
-  const totalItemCount = filteredRepoList.length;
+  const totalItemCount = repoList.length;
   const totalPageCount = Math.ceil(totalItemCount / PAGE_SIZE);
 
   const startIndex = currentPageNumber * PAGE_SIZE; // inclusive
@@ -27,80 +17,34 @@ export function GitHubRoot() {
   const canGoBack = startIndex > 0;
   const canGoNext = endIndex < totalItemCount;
 
-  const visibleWindow = filteredRepoList.slice(startIndex, endIndex);
+  const visibleWindow = repoList.slice(startIndex, endIndex);
 
   return (
     <div className="p-8">
       <div className="flex flex-col gap-6">
         {visibleWindow.map((item) => {
-          return (
-            <RepoItem
-              key={item.id}
-              data={item}
-              likeCount={likeCountMap.get(item.id) ?? 0}
-              onHideClick={() => {
-                setHiddenItemSet((set) => {
-                  const copy = new Set(set);
-                  copy.add(item.id);
-                  return copy;
-                });
-              }}
-              onLikeClick={() => {
-                setLikeCountMap((map) => {
-                  const copy = new Map(map);
-                  const currentLikeCount = copy.get(item.id) ?? 0;
-
-                  copy.set(item.id, currentLikeCount + 1);
-                  return copy;
-                });
-              }}
-            />
-          );
+          return <RepoItem key={item.id} data={item} />;
         })}
       </div>
 
-      <div className="mt-12">
-        <button
-          disabled={!canGoBack}
-          className={cx({
-            "hover:underline": canGoBack,
-            "text-gray-300": !canGoBack,
-          })}
-          onClick={() => {
-            setCurrentPageNumber((n) => n - 1);
-          }}
-        >
-          Prev
-        </button>
-
-        <span className="mx-8">
-          {currentPageNumber + 1} / {totalPageCount}
-        </span>
-
-        <button
-          disabled={!canGoNext}
-          className={cx({
-            "hover:underline": canGoNext,
-            "text-gray-300": !canGoNext,
-          })}
-          onClick={() => {
-            setCurrentPageNumber((n) => n + 1);
-          }}
-        >
-          Next
-        </button>
-      </div>
+      <PaginationControl
+        canGoBack={canGoBack}
+        canGoNext={canGoNext}
+        currentPageNumber={currentPageNumber}
+        onNextClick={() => {
+          setCurrentPageNumber((n) => n + 1);
+        }}
+        onPrevClick={() => {
+          setCurrentPageNumber((n) => n - 1);
+        }}
+        totalPageCount={totalPageCount}
+      />
     </div>
   );
 }
 
-function RepoItem(props: {
-  data: TRepoSearchResultItem;
-  likeCount: number;
-  onHideClick: () => void;
-  onLikeClick: () => void;
-}) {
-  const { data, likeCount, onHideClick, onLikeClick } = props;
+function RepoItem(props: { data: TRepoSearchResultItem }) {
+  const { data } = props;
 
   const formattedCreatedAt = formatRelativeTime(data.created_at);
 
@@ -115,24 +59,6 @@ function RepoItem(props: {
       <p className="text-sm text-gray-600">
         {data.stargazers_count.toLocaleString("en-US")} stars | created{" "}
         {formattedCreatedAt}
-        {" | "}
-        <button
-          className="hover:underline"
-          onClick={() => {
-            onHideClick();
-          }}
-        >
-          hide
-        </button>
-        {" | "}
-        <button
-          className="hover:underline"
-          onClick={() => {
-            onLikeClick();
-          }}
-        >
-          like ({likeCount})
-        </button>
       </p>
     </div>
   );
