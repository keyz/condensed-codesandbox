diff --git a/chapter-03-11-lift-state-up/src/root.tsx b/chapter-03-12-quiz-answers/src/root.tsx
--- a/chapter-03-11-lift-state-up/src/root.tsx
+++ b/chapter-03-12-quiz-answers/src/root.tsx
@@ -10,8 +10,15 @@ export function GitHubRoot() {
   const [likeCountMap, setLikeCountMap] = React.useState<Map<number, number>>(
     new Map(),
   );
+  const [hiddenItemSet, setHiddenItemSet] = React.useState<Set<number>>(
+    new Set(),
+  );
+
+  const filteredRepoList = repoList.filter(
+    (item) => !hiddenItemSet.has(item.id),
+  );
 
-  const totalItemCount = repoList.length;
+  const totalItemCount = filteredRepoList.length;
   const totalPageCount = Math.ceil(totalItemCount / PAGE_SIZE);
 
   const startIndex = currentPageNumber * PAGE_SIZE; // Inclusive
@@ -20,7 +27,7 @@ export function GitHubRoot() {
   const canGoBack = startIndex > 0;
   const canGoForward = endIndex < totalItemCount;
 
-  const visibleWindow = repoList.slice(startIndex, endIndex);
+  const visibleWindow = filteredRepoList.slice(startIndex, endIndex);
 
   return (
     <div className="p-8">
@@ -31,6 +38,13 @@ export function GitHubRoot() {
               key={item.id}
               data={item}
               likeCount={likeCountMap.get(item.id) ?? 0}
+              onHideClick={() => {
+                setHiddenItemSet((set) => {
+                  const copy = new Set(set);
+                  copy.add(item.id);
+                  return copy;
+                });
+              }}
               onLikeClick={() => {
                 setLikeCountMap((map) => {
                   const copy = new Map(map);
@@ -83,9 +97,10 @@ export function GitHubRoot() {
 function RepoItem(props: {
   data: TRepoSearchResultItem;
   likeCount: number;
+  onHideClick: () => void;
   onLikeClick: () => void;
 }) {
-  const { data, likeCount, onLikeClick } = props;
+  const { data, likeCount, onHideClick, onLikeClick } = props;
 
   const formattedCreatedAt = formatRelativeTime(data.created_at);
 
@@ -101,6 +116,15 @@ function RepoItem(props: {
         {data.stargazers_count.toLocaleString("en-US")} stars | created{" "}
         {formattedCreatedAt}
         {" | "}
+        <button
+          className="hover:underline"
+          onClick={() => {
+            onHideClick();
+          }}
+        >
+          hide
+        </button>
+        {" | "}
         <button
           className="hover:underline"
           onClick={() => {
