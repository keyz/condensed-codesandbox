
================================================================================

diff --git a/chapter-01-01-hello-world/src/root.tsx b/chapter-01-02-just-titles/src/root.tsx
index 14eb748..08cc71e 100644
--- a/chapter-01-01-hello-world/src/root.tsx
+++ b/chapter-01-02-just-titles/src/root.tsx
@@ -1,3 +1,13 @@
-export function Hello() {
-  return <p>Hello Condensed!</p>;
+export function HackerNews() {
+  const title1 = "How Is LLaMa.cpp Possible?";
+  const title2 = "NetMaker: Connect Everything with a WireGuard VPN";
+  const title3 = "Opendream: A layer-based UI for Stable Diffusion";
+
+  return (
+    <div>
+      <p>{title1}</p>
+      <p>{title2}</p>
+      <p>{title3}</p>
+    </div>
+  );
 }

================================================================================

diff --git a/chapter-01-02-just-titles/src/root.tsx b/chapter-01-03-first-map/src/root.tsx
index 08cc71e..af3b799 100644
--- a/chapter-01-02-just-titles/src/root.tsx
+++ b/chapter-01-03-first-map/src/root.tsx
@@ -1,13 +1,36 @@
-export function HackerNews() {
-  const title1 = "How Is LLaMa.cpp Possible?";
-  const title2 = "NetMaker: Connect Everything with a WireGuard VPN";
-  const title3 = "Opendream: A layer-based UI for Stable Diffusion";
+const data = [
+  {
+    id: 37140013,
+    title: "How Is LLaMa.cpp Possible?",
+  },
+  {
+    id: 37142388,
+    title: "NetMaker: Connect Everything with a WireGuard VPN",
+  },
+  {
+    id: 37136898,
+    title: "Opendream: A layer-based UI for Stable Diffusion",
+  },
+  {
+    id: 37140159,
+    title: "Modern CSV version 2",
+  },
+  {
+    id: 37142426,
+    title: "Diligere, Equity-Invest Are New Firms of U.K. Con Man",
+  },
+  {
+    id: 37138807,
+    title: "How should I read type system notation?",
+  },
+];
 
+export function HackerNews() {
   return (
     <div>
-      <p>{title1}</p>
-      <p>{title2}</p>
-      <p>{title3}</p>
+      {data.map((item) => {
+        return <p key={item.id}>{item.title}</p>;
+      })}
     </div>
   );
 }

================================================================================

diff --git a/chapter-01-03-first-map/src/root.tsx b/chapter-01-04-real-data/src/root.tsx
index af3b799..d2e06d0 100644
--- a/chapter-01-03-first-map/src/root.tsx
+++ b/chapter-01-04-real-data/src/root.tsx
@@ -1,29 +1,4 @@
-const data = [
-  {
-    id: 37140013,
-    title: "How Is LLaMa.cpp Possible?",
-  },
-  {
-    id: 37142388,
-    title: "NetMaker: Connect Everything with a WireGuard VPN",
-  },
-  {
-    id: 37136898,
-    title: "Opendream: A layer-based UI for Stable Diffusion",
-  },
-  {
-    id: 37140159,
-    title: "Modern CSV version 2",
-  },
-  {
-    id: 37142426,
-    title: "Diligere, Equity-Invest Are New Firms of U.K. Con Man",
-  },
-  {
-    id: 37138807,
-    title: "How should I read type system notation?",
-  },
-];
+import data from "./hn-top-stories.json";
 
 export function HackerNews() {
   return (

================================================================================

diff --git a/chapter-01-04-real-data/src/root.tsx b/chapter-01-05-pre-trick/src/root.tsx
index d2e06d0..d62fc88 100644
--- a/chapter-01-04-real-data/src/root.tsx
+++ b/chapter-01-05-pre-trick/src/root.tsx
@@ -4,7 +4,7 @@ export function HackerNews() {
   return (
     <div>
       {data.map((item) => {
-        return <p key={item.id}>{item.title}</p>;
+        return <pre key={item.id}>{JSON.stringify(item, null, 2)}</pre>;
       })}
     </div>
   );

================================================================================

diff --git a/chapter-01-05-pre-trick/src/root.tsx b/chapter-01-06-more-ui/src/root.tsx
index d62fc88..c2522d9 100644
--- a/chapter-01-05-pre-trick/src/root.tsx
+++ b/chapter-01-06-more-ui/src/root.tsx
@@ -4,7 +4,14 @@ export function HackerNews() {
   return (
     <div>
       {data.map((item) => {
-        return <pre key={item.id}>{JSON.stringify(item, null, 2)}</pre>;
+        return (
+          <div key={item.id}>
+            <p>{item.title}</p>
+            <p>
+              {item.score} points by {item.by} | {item.descendants} comments
+            </p>
+          </div>
+        );
       })}
     </div>
   );

================================================================================

diff --git a/chapter-01-06-more-ui/src/root.tsx b/chapter-01-07-adding-links/src/root.tsx
index c2522d9..6726a51 100644
--- a/chapter-01-06-more-ui/src/root.tsx
+++ b/chapter-01-07-adding-links/src/root.tsx
@@ -6,7 +6,9 @@ export function HackerNews() {
       {data.map((item) => {
         return (
           <div key={item.id}>
-            <p>{item.title}</p>
+            <p>
+              <a href={item.url}>{item.title}</a>
+            </p>
             <p>
               {item.score} points by {item.by} | {item.descendants} comments
             </p>

================================================================================

diff --git a/chapter-01-07-adding-links/src/root.tsx b/chapter-01-08-with-date-fns/src/root.tsx
index 6726a51..f9c2b25 100644
--- a/chapter-01-07-adding-links/src/root.tsx
+++ b/chapter-01-08-with-date-fns/src/root.tsx
@@ -1,16 +1,28 @@
+import formatDistanceToNowStrict from "date-fns/formatDistanceToNowStrict";
+import { enUS as localeEnUs } from "date-fns/locale";
 import data from "./hn-top-stories.json";
 
 export function HackerNews() {
   return (
     <div>
       {data.map((item) => {
+        // See https://date-fns.org/v2.30.0/docs/formatDistanceToNowStrict
+        const formattedTime = formatDistanceToNowStrict(
+          item.time * 1000, // seconds -> milliseconds
+          {
+            addSuffix: true, // add "ago"
+            locale: localeEnUs,
+          },
+        );
+
         return (
           <div key={item.id}>
             <p>
               <a href={item.url}>{item.title}</a>
             </p>
             <p>
-              {item.score} points by {item.by} | {item.descendants} comments
+              {item.score} points by {item.by} {formattedTime} |{" "}
+              {item.descendants} comments
             </p>
           </div>
         );

================================================================================

diff --git a/chapter-01-08-with-date-fns/src/root.tsx b/chapter-01-09-basic-layout/src/root.tsx
index f9c2b25..20d8157 100644
--- a/chapter-01-08-with-date-fns/src/root.tsx
+++ b/chapter-01-09-basic-layout/src/root.tsx
@@ -4,7 +4,7 @@ import data from "./hn-top-stories.json";
 
 export function HackerNews() {
   return (
-    <div>
+    <div className="flex flex-col gap-6 p-8">
       {data.map((item) => {
         // See https://date-fns.org/v2.30.0/docs/formatDistanceToNowStrict
         const formattedTime = formatDistanceToNowStrict(

================================================================================

diff --git a/chapter-01-09-basic-layout/src/root.tsx b/chapter-01-10-more-styling/src/root.tsx
index 20d8157..e703ff3 100644
--- a/chapter-01-09-basic-layout/src/root.tsx
+++ b/chapter-01-10-more-styling/src/root.tsx
@@ -20,7 +20,7 @@ export function HackerNews() {
             <p>
               <a href={item.url}>{item.title}</a>
             </p>
-            <p>
+            <p className="text-sm text-gray-600">
               {item.score} points by {item.by} {formattedTime} |{" "}
               {item.descendants} comments
             </p>

================================================================================

diff --git a/chapter-01-10-more-styling/src/root.tsx b/chapter-01-11-quiz-answers/src/root.tsx
index e703ff3..6ca8350 100644
--- a/chapter-01-10-more-styling/src/root.tsx
+++ b/chapter-01-11-quiz-answers/src/root.tsx
@@ -18,11 +18,18 @@ export function HackerNews() {
         return (
           <div key={item.id}>
             <p>
-              <a href={item.url}>{item.title}</a>
+              <a className="hover:underline" href={item.url}>
+                {item.title}
+              </a>
             </p>
             <p className="text-sm text-gray-600">
               {item.score} points by {item.by} {formattedTime} |{" "}
-              {item.descendants} comments
+              <a
+                className="hover:underline"
+                href={`https://news.ycombinator.com/item?id=${item.id}`}
+              >
+                {item.descendants} comments
+              </a>
             </p>
           </div>
         );

================================================================================

diff --git a/chapter-01-11-quiz-answers/src/root.tsx b/chapter-03-01-state-starter/src/root.tsx
index 6ca8350..269d012 100644
--- a/chapter-01-11-quiz-answers/src/root.tsx
+++ b/chapter-03-01-state-starter/src/root.tsx
@@ -1,39 +1,35 @@
-import formatDistanceToNowStrict from "date-fns/formatDistanceToNowStrict";
-import { enUS as localeEnUs } from "date-fns/locale";
-import data from "./hn-top-stories.json";
+import { storyList } from "./data";
+import { formatRelativeTime } from "./helpers/time";
 
 export function HackerNews() {
   return (
-    <div className="flex flex-col gap-6 p-8">
-      {data.map((item) => {
-        // See https://date-fns.org/v2.30.0/docs/formatDistanceToNowStrict
-        const formattedTime = formatDistanceToNowStrict(
-          item.time * 1000, // seconds -> milliseconds
-          {
-            addSuffix: true, // add "ago"
-            locale: localeEnUs,
-          },
-        );
+    <div className="p-8">
+      <div className="flex flex-col gap-6">
+        {storyList.map((item) => {
+          const formattedTime = formatRelativeTime(item.time);
 
-        return (
-          <div key={item.id}>
-            <p>
-              <a className="hover:underline" href={item.url}>
-                {item.title}
-              </a>
-            </p>
-            <p className="text-sm text-gray-600">
-              {item.score} points by {item.by} {formattedTime} |{" "}
-              <a
-                className="hover:underline"
-                href={`https://news.ycombinator.com/item?id=${item.id}`}
-              >
-                {item.descendants} comments
-              </a>
-            </p>
-          </div>
-        );
-      })}
+          return (
+            <div key={item.id}>
+              <p>
+                <a className="hover:underline" href={item.url}>
+                  {item.title}
+                </a>
+              </p>
+
+              <p className="text-sm text-gray-600">
+                {item.score} points by {item.by} {formattedTime}
+                {" | "}
+                <a
+                  className="hover:underline"
+                  href={`https://news.ycombinator.com/item?id=${item.id}`}
+                >
+                  {item.descendants} comments
+                </a>
+              </p>
+            </div>
+          );
+        })}
+      </div>
     </div>
   );
 }

================================================================================

diff --git a/chapter-03-01-state-starter/src/root.tsx b/chapter-03-02-new-component/src/root.tsx
index 269d012..0dd5d6e 100644
--- a/chapter-03-01-state-starter/src/root.tsx
+++ b/chapter-03-02-new-component/src/root.tsx
@@ -1,4 +1,4 @@
-import { storyList } from "./data";
+import { storyList, type TStoryItem } from "./data";
 import { formatRelativeTime } from "./helpers/time";
 
 export function HackerNews() {
@@ -6,30 +6,36 @@ export function HackerNews() {
     <div className="p-8">
       <div className="flex flex-col gap-6">
         {storyList.map((item) => {
-          const formattedTime = formatRelativeTime(item.time);
-
-          return (
-            <div key={item.id}>
-              <p>
-                <a className="hover:underline" href={item.url}>
-                  {item.title}
-                </a>
-              </p>
-
-              <p className="text-sm text-gray-600">
-                {item.score} points by {item.by} {formattedTime}
-                {" | "}
-                <a
-                  className="hover:underline"
-                  href={`https://news.ycombinator.com/item?id=${item.id}`}
-                >
-                  {item.descendants} comments
-                </a>
-              </p>
-            </div>
-          );
+          return <NewsItem key={item.id} data={item} />;
         })}
       </div>
     </div>
   );
 }
+
+function NewsItem(props: { data: TStoryItem }) {
+  const { data } = props;
+
+  const formattedTime = formatRelativeTime(data.time);
+
+  return (
+    <div>
+      <p>
+        <a className="hover:underline" href={data.url}>
+          {data.title}
+        </a>
+      </p>
+
+      <p className="text-sm text-gray-600">
+        {data.score} points by {data.by} {formattedTime}
+        {" | "}
+        <a
+          className="hover:underline"
+          href={`https://news.ycombinator.com/item?id=${data.id}`}
+        >
+          {data.descendants} comments
+        </a>
+      </p>
+    </div>
+  );
+}

================================================================================

diff --git a/chapter-03-02-new-component/src/root.tsx b/chapter-03-03-first-state/src/root.tsx
index 0dd5d6e..1e674fa 100644
--- a/chapter-03-02-new-component/src/root.tsx
+++ b/chapter-03-03-first-state/src/root.tsx
@@ -1,3 +1,4 @@
+import * as React from "react";
 import { storyList, type TStoryItem } from "./data";
 import { formatRelativeTime } from "./helpers/time";
 
@@ -16,6 +17,8 @@ export function HackerNews() {
 function NewsItem(props: { data: TStoryItem }) {
   const { data } = props;
 
+  const [likeCount, setLikeCount] = React.useState<number>(0);
+
   const formattedTime = formatRelativeTime(data.time);
 
   return (
@@ -35,6 +38,15 @@ function NewsItem(props: { data: TStoryItem }) {
         >
           {data.descendants} comments
         </a>
+        {" | "}
+        <button
+          className="hover:underline"
+          onClick={() => {
+            setLikeCount(likeCount + 1);
+          }}
+        >
+          like ({likeCount})
+        </button>
       </p>
     </div>
   );

================================================================================

diff --git a/chapter-03-03-first-state/src/root.tsx b/chapter-03-04-stale-state-bug/src/root.tsx
index 1e674fa..06b76fb 100644
--- a/chapter-03-03-first-state/src/root.tsx
+++ b/chapter-03-04-stale-state-bug/src/root.tsx
@@ -43,6 +43,8 @@ function NewsItem(props: { data: TStoryItem }) {
           className="hover:underline"
           onClick={() => {
             setLikeCount(likeCount + 1);
+            setLikeCount(likeCount + 1);
+            setLikeCount(likeCount + 1);
           }}
         >
           like ({likeCount})

================================================================================

diff --git a/chapter-03-04-stale-state-bug/src/root.tsx b/chapter-03-05-state-functional-updater/src/root.tsx
index 06b76fb..c17108f 100644
--- a/chapter-03-04-stale-state-bug/src/root.tsx
+++ b/chapter-03-05-state-functional-updater/src/root.tsx
@@ -42,9 +42,9 @@ function NewsItem(props: { data: TStoryItem }) {
         <button
           className="hover:underline"
           onClick={() => {
-            setLikeCount(likeCount + 1);
-            setLikeCount(likeCount + 1);
-            setLikeCount(likeCount + 1);
+            setLikeCount((num) => num + 1);
+            setLikeCount((num) => num + 1);
+            setLikeCount((num) => num + 1);
           }}
         >
           like ({likeCount})

================================================================================

diff --git a/chapter-03-05-state-functional-updater/src/root.tsx b/chapter-03-06-pagination-state/src/root.tsx
index c17108f..6a018e6 100644
--- a/chapter-03-05-state-functional-updater/src/root.tsx
+++ b/chapter-03-06-pagination-state/src/root.tsx
@@ -2,11 +2,20 @@ import * as React from "react";
 import { storyList, type TStoryItem } from "./data";
 import { formatRelativeTime } from "./helpers/time";
 
+const PAGE_SIZE = 10;
+
 export function HackerNews() {
+  const [currentPageNumber, setCurrentPageNumber] = React.useState<number>(0);
+
+  const startIndex = currentPageNumber * PAGE_SIZE; // inclusive
+  const endIndex = (currentPageNumber + 1) * PAGE_SIZE; // exclusive
+
+  const visibleWindow = storyList.slice(startIndex, endIndex);
+
   return (
     <div className="p-8">
       <div className="flex flex-col gap-6">
-        {storyList.map((item) => {
+        {visibleWindow.map((item) => {
           return <NewsItem key={item.id} data={item} />;
         })}
       </div>
@@ -43,8 +52,6 @@ function NewsItem(props: { data: TStoryItem }) {
           className="hover:underline"
           onClick={() => {
             setLikeCount((num) => num + 1);
-            setLikeCount((num) => num + 1);
-            setLikeCount((num) => num + 1);
           }}
         >
           like ({likeCount})

================================================================================

diff --git a/chapter-03-06-pagination-state/src/root.tsx b/chapter-03-07-pagination-button/src/root.tsx
index 6a018e6..1794356 100644
--- a/chapter-03-06-pagination-state/src/root.tsx
+++ b/chapter-03-07-pagination-button/src/root.tsx
@@ -7,6 +7,9 @@ const PAGE_SIZE = 10;
 export function HackerNews() {
   const [currentPageNumber, setCurrentPageNumber] = React.useState<number>(0);
 
+  const totalItemCount = storyList.length;
+  const totalPageCount = Math.ceil(totalItemCount / PAGE_SIZE);
+
   const startIndex = currentPageNumber * PAGE_SIZE; // inclusive
   const endIndex = (currentPageNumber + 1) * PAGE_SIZE; // exclusive
 
@@ -19,6 +22,30 @@ export function HackerNews() {
           return <NewsItem key={item.id} data={item} />;
         })}
       </div>
+
+      <div className="mt-12">
+        <button
+          className="hover:underline"
+          onClick={() => {
+            setCurrentPageNumber((n) => n - 1);
+          }}
+        >
+          Prev
+        </button>
+
+        <span className="mx-8">
+          {currentPageNumber + 1} / {totalPageCount}
+        </span>
+
+        <button
+          className="hover:underline"
+          onClick={() => {
+            setCurrentPageNumber((n) => n + 1);
+          }}
+        >
+          Next
+        </button>
+      </div>
     </div>
   );
 }

================================================================================

diff --git a/chapter-03-07-pagination-button/src/root.tsx b/chapter-03-08-remember-unique-key/src/root.tsx
index 1794356..3b7e5f0 100644
--- a/chapter-03-07-pagination-button/src/root.tsx
+++ b/chapter-03-08-remember-unique-key/src/root.tsx
@@ -18,8 +18,8 @@ export function HackerNews() {
   return (
     <div className="p-8">
       <div className="flex flex-col gap-6">
-        {visibleWindow.map((item) => {
-          return <NewsItem key={item.id} data={item} />;
+        {visibleWindow.map((item, index) => {
+          return <NewsItem key={index} data={item} />;
         })}
       </div>
 

================================================================================

diff --git a/chapter-03-08-remember-unique-key/src/root.tsx b/chapter-03-09-derived-value/src/root.tsx
index 3b7e5f0..b15873e 100644
--- a/chapter-03-08-remember-unique-key/src/root.tsx
+++ b/chapter-03-09-derived-value/src/root.tsx
@@ -13,18 +13,22 @@ export function HackerNews() {
   const startIndex = currentPageNumber * PAGE_SIZE; // inclusive
   const endIndex = (currentPageNumber + 1) * PAGE_SIZE; // exclusive
 
+  const canGoBack = startIndex > 0;
+  const canGoNext = endIndex < totalItemCount;
+
   const visibleWindow = storyList.slice(startIndex, endIndex);
 
   return (
     <div className="p-8">
       <div className="flex flex-col gap-6">
-        {visibleWindow.map((item, index) => {
-          return <NewsItem key={index} data={item} />;
+        {visibleWindow.map((item) => {
+          return <NewsItem key={item.id} data={item} />;
         })}
       </div>
 
       <div className="mt-12">
         <button
+          disabled={!canGoBack}
           className="hover:underline"
           onClick={() => {
             setCurrentPageNumber((n) => n - 1);
@@ -38,6 +42,7 @@ export function HackerNews() {
         </span>
 
         <button
+          disabled={!canGoNext}
           className="hover:underline"
           onClick={() => {
             setCurrentPageNumber((n) => n + 1);

================================================================================

diff --git a/chapter-03-09-derived-value/src/root.tsx b/chapter-03-10-bonus-conditional-styles/src/root.tsx
index b15873e..e316b7a 100644
--- a/chapter-03-09-derived-value/src/root.tsx
+++ b/chapter-03-10-bonus-conditional-styles/src/root.tsx
@@ -1,4 +1,5 @@
 import * as React from "react";
+import cx from "classnames";
 import { storyList, type TStoryItem } from "./data";
 import { formatRelativeTime } from "./helpers/time";
 
@@ -29,7 +30,10 @@ export function HackerNews() {
       <div className="mt-12">
         <button
           disabled={!canGoBack}
-          className="hover:underline"
+          className={cx({
+            "hover:underline": canGoBack,
+            "text-gray-300": !canGoBack,
+          })}
           onClick={() => {
             setCurrentPageNumber((n) => n - 1);
           }}
@@ -43,7 +47,10 @@ export function HackerNews() {
 
         <button
           disabled={!canGoNext}
-          className="hover:underline"
+          className={cx({
+            "hover:underline": canGoNext,
+            "text-gray-300": !canGoNext,
+          })}
           onClick={() => {
             setCurrentPageNumber((n) => n + 1);
           }}

================================================================================

diff --git a/chapter-03-10-bonus-conditional-styles/src/root.tsx b/chapter-03-11-lift-state-up/src/root.tsx
index e316b7a..b05c375 100644
--- a/chapter-03-10-bonus-conditional-styles/src/root.tsx
+++ b/chapter-03-11-lift-state-up/src/root.tsx
@@ -7,6 +7,9 @@ const PAGE_SIZE = 10;
 
 export function HackerNews() {
   const [currentPageNumber, setCurrentPageNumber] = React.useState<number>(0);
+  const [likeCountMap, setLikeCountMap] = React.useState<Map<number, number>>(
+    new Map(),
+  );
 
   const totalItemCount = storyList.length;
   const totalPageCount = Math.ceil(totalItemCount / PAGE_SIZE);
@@ -23,7 +26,22 @@ export function HackerNews() {
     <div className="p-8">
       <div className="flex flex-col gap-6">
         {visibleWindow.map((item) => {
-          return <NewsItem key={item.id} data={item} />;
+          return (
+            <NewsItem
+              key={item.id}
+              data={item}
+              likeCount={likeCountMap.get(item.id) ?? 0}
+              onLikeClick={() => {
+                setLikeCountMap((map) => {
+                  const copy = new Map(map);
+                  const currentLikeCount = copy.get(item.id) ?? 0;
+
+                  copy.set(item.id, currentLikeCount + 1);
+                  return copy;
+                });
+              }}
+            />
+          );
         })}
       </div>
 
@@ -62,10 +80,12 @@ export function HackerNews() {
   );
 }
 
-function NewsItem(props: { data: TStoryItem }) {
-  const { data } = props;
-
-  const [likeCount, setLikeCount] = React.useState<number>(0);
+function NewsItem(props: {
+  data: TStoryItem;
+  likeCount: number;
+  onLikeClick: () => void;
+}) {
+  const { data, likeCount, onLikeClick } = props;
 
   const formattedTime = formatRelativeTime(data.time);
 
@@ -90,7 +110,7 @@ function NewsItem(props: { data: TStoryItem }) {
         <button
           className="hover:underline"
           onClick={() => {
-            setLikeCount((num) => num + 1);
+            onLikeClick();
           }}
         >
           like ({likeCount})

================================================================================

diff --git a/chapter-03-11-lift-state-up/src/root.tsx b/chapter-03-12-quiz-answers/src/root.tsx
index b05c375..db77fa6 100644
--- a/chapter-03-11-lift-state-up/src/root.tsx
+++ b/chapter-03-12-quiz-answers/src/root.tsx
@@ -10,8 +10,15 @@ export function HackerNews() {
   const [likeCountMap, setLikeCountMap] = React.useState<Map<number, number>>(
     new Map(),
   );
+  const [hiddenItemSet, setHiddenItemSet] = React.useState<Set<number>>(
+    new Set(),
+  );
+
+  const filteredStoryList = storyList.filter(
+    (item) => !hiddenItemSet.has(item.id),
+  );
 
-  const totalItemCount = storyList.length;
+  const totalItemCount = filteredStoryList.length;
   const totalPageCount = Math.ceil(totalItemCount / PAGE_SIZE);
 
   const startIndex = currentPageNumber * PAGE_SIZE; // inclusive
@@ -20,7 +27,7 @@ export function HackerNews() {
   const canGoBack = startIndex > 0;
   const canGoNext = endIndex < totalItemCount;
 
-  const visibleWindow = storyList.slice(startIndex, endIndex);
+  const visibleWindow = filteredStoryList.slice(startIndex, endIndex);
 
   return (
     <div className="p-8">
@@ -31,6 +38,13 @@ export function HackerNews() {
               key={item.id}
               data={item}
               likeCount={likeCountMap.get(item.id) ?? 0}
+              onHideClick={() => {
+                setHiddenItemSet((set) => {
+                  const copy = new Set(set);
+                  copy.add(item.id);
+                  return copy;
+                });
+              }}
               onLikeClick={() => {
                 setLikeCountMap((map) => {
                   const copy = new Map(map);
@@ -83,9 +97,10 @@ export function HackerNews() {
 function NewsItem(props: {
   data: TStoryItem;
   likeCount: number;
+  onHideClick: () => void;
   onLikeClick: () => void;
 }) {
-  const { data, likeCount, onLikeClick } = props;
+  const { data, likeCount, onHideClick, onLikeClick } = props;
 
   const formattedTime = formatRelativeTime(data.time);
 
@@ -100,6 +115,15 @@ function NewsItem(props: {
       <p className="text-sm text-gray-600">
         {data.score} points by {data.by} {formattedTime}
         {" | "}
+        <button
+          className="hover:underline"
+          onClick={() => {
+            onHideClick();
+          }}
+        >
+          hide
+        </button>
+        {" | "}
         <a
           className="hover:underline"
           href={`https://news.ycombinator.com/item?id=${data.id}`}
